Javascript: JavaScript is a cross-platform, object-oriented scripting language used to make webpages interactive 
(e.g., having complex animations, clickable buttons, pop-up menus, etc.). 

Statement ->  A unit of code in JavaScript that represents a complete instruction or action, 
often terminated by a semicolon. Statements are executed sequentially, one after the other, and they 
define the program's behavior.

Sep 9+
DOCTYPE:-  <!DOCTYPE> is a declaration in HTML that specifies the type and version of the document.

Meta:-This is an HTML element used to provide metadata about the HTML document. 
Metadata is information about the document that isn't displayed on the web page but provides important 
information for web browsers and search engines.

Encoding:- Encoding, in the context of computing and data representation, refers to the process of converting 
information or data from one format or representation into another. 

Decoding:- Decoding is the process of converting encoded or encoded data back into its original, 
human-readable format or its original representation. It is essentially the reverse operation of encoding. 

<meta charset="UTF-8"> :- <meta charset="UTF-8"> is an HTML meta tag used to declare the character encoding 
of a web page.

UTF:- "UTF" stands for "Unicode Transformation Format." Unicode is a standardized character encoding system 
that assigns a unique number (called a "code point") to every character from every writing system 
in the world. This includes characters from English, Chinese, Arabic, Greek, and many others.

OUTPUT:
JavaScript can "display" data in four(4) different ways:
1. innerHTML
2. document.write()
3. window.alert()
4. console.log()

Writing into an HTML element, using innerHTML. 
Eg: let output = document.getElementById("idname");
output.innerHTML = "hello, world!";

Writing into the HTML output using document.write().
Eg: document.write("hello")

Writing into an alert box, using window.alert().
Eg: window.alert("hello")

Writing into the browser console, using console.log().
Eg: console.log("hello");

Variable: Variables are Containers for Storing Data. A variable is a named reference to a value. That way 
an unpredictable value can be accessed through a predetermined name.
Eg- var mithun = 30; here "mithun" is the variable. "var" is variable declaration & "30" is value.
types of variable declaration - var, let & const

let, const & var:- let can be declared and value can be assigned later. In const value should be assigned 
immediately after declaration.

let mithun = 30; // If the value might change later
const mithun = 30; // If the value should not be changed (constant)
var mithun = 30; // works similar to both let and const, it came before ES6(2015). var has global as well as 
functional scope;

Aug25+ 
Hoisting: Hoisting in JavaScript is the behavior where variable and function declarations are moved to the 
top of their containing scope during the code execution phase.

Aug18+ 
Data Type: a data type defines the type of value that a variable or expression can hold.

Aug23+ 
Data types are divided into two groups 1> Primitive & 2> Non-Primitive
(Primitive eg:- undefined, null, boolean, string, symbol, bigint, number).
(Non-Primitive:- Object).

JavaScript provides eight(8) different data types which are undefined, null, boolean, string, symbol, bigint, 
number, and object.

Assignment Operator: https://www.w3schools.com/js/js_assignment.asp

a = 20
(20 = a && 30 = a) =>> false      Logical AND operator          True | False = False
                                                                True | True  = True


(20 = a || 30 = a) =>> True       Logical OR operator           True | False = True

Aug18+ 

(!(2=2))			  Logical NOT			True => False
								False => True
								
Aug19+ 
pop() - always removes the last element of an array.
shift() - it removes the first element.
 
Function - a function is a reusable block of code that performs a specific task or set of tasks.
 
Aug21+ 
JSON -  JSON stands for "JavaScript Object Notation." It's a simple and widely used way to organize and 
store data in a format that's easy for both humans and computers to understand.	
 
Stringify - stringify is a term used to describe the process of turning complex data, like objects or arrays, 
into a special kind of text called a "string." A string is just a bunch of characters, like letters, numbers,
and symbols, all put together.	

Aug22+
Conditional Statement Questions:
Q1.=> Mithun's age is 30 and Kumar's age is 29. Who is older in age?

Q2.=> "abc" salary is Rs 1000, "def" salary is Rs 2000 & "xyz" salary is Rs 3000. Write in order or list Highest, Medium & Lowest salary of all the three?
ans:    xyz has highest salary
        def has medium salary
        abc has lowset salary		
        
 Q3. => write switch startment to check the days of a week
 
 Q4. => write switch statement to check which month it is?	
 
 Q5. => write a program to find out whether the number is a Even number?	
 
 Sep 2+ 
 Recursion:  Recursion is a programming concept where a function calls itself in order to solve a problem. 
 
 Q6. Find Factorial of a number using Recursion:
 Solution:- 
 function factorial(n) {
    if (n === 0) {
        return 1; // Base case: 0! is 1
    } else {
        return n * factorial(n - 1); // Recursive case: n! = n * (n-1)!
    }
}

console.log(factorial(5)); // Outputs 120 (5! = 5 * 4 * 3 * 2 * 1 = 120)

Statement:- In JavaScript, a statement is a complete line of code that performs a specific action. 
Statements are the fundamental building blocks of JavaScript programs, and they instruct the computer 
on what to do. 

Sep 8+
Array:- Array is a collection of similar type of data.

Objects:- Object: An object in JavaScript is a composite data type that can store key-value pairs. 
It is a container for related data and functionality, and it is created using curly braces {}. 
The keys are used to access the values within the object.

Bind :- In JavaScript, the bind method is used to create a new function that, when invoked, sets 
a specific context (the value of this) for that function. This allows you to control what this 
refers to when the function is executed. The original function remains unchanged.

Explain: 
        const obj = { value: 42 };

        function getValue() {
            return this.value;
        }

        const boundFunction = getValue.bind(obj);
        console.log(boundFunction()); // Outputs 42

 
 
 
 




 
 
 
 


 
 
 
 
 
@**&$% Later Concept__:---
 
Callback:- A callback in Javascript is a function that is passed as an argument to another function and 
is executed when that function completes.
 
Promise:- A promise in Javascript is an object representing the eventual completion or failure of an 
asynchronous operation and allows handling its result or error when ready.
 
Event Loop:- Event Loop is a continuous process that handles the execution of code, ensuring that tasks 
are processed efficiently in a non-blocking and asynchronous way. 
                        It is a critical part of JavaScript's concurrency model and is responsible for 
managing tasks such as handling user interactions, making network requests, and processing events.
 		
Call Stack:- The call stack in JavaScript is a data structure that keeps track of function calls and 
their execution context during the execution of a program. 
                        It's like a stack of function calls, where each function call is added to the top 
of the stack when it's invoked and removed from the stack when it's completed.
